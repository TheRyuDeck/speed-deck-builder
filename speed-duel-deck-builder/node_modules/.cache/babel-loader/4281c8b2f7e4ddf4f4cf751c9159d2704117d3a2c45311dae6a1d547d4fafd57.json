{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards,\n  setCards\n}) {\n  _s();\n  useEffect(() => {\n    console.log(\"Cartas seleccionadas:\", cards);\n  }, [cards]);\n\n  // Guardar todo el array de cartas en un archivo JSON\n  const exportToFile = () => {\n    const data = JSON.stringify(cards, null, 2);\n    const blob = new Blob([data], {\n      type: \"application/json\"\n    });\n    const a = document.createElement(\"a\");\n    a.href = URL.createObjectURL(blob);\n    a.download = \"cartas_seleccionadas.json\";\n    a.click();\n  };\n\n  // Cargar todo el array de cartas desde un archivo JSON\n  const importFromFile = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        // Aquí están todas las cartas con su info completa\n        const importedCards = JSON.parse(e.target.result);\n        setCards(importedCards);\n      } catch (error) {\n        console.error(\"Error al importar archivo:\", error);\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cartas Seleccionadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToFile,\n      children: \"Guardar Cartas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: importFromFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: cards.length > 0 ? cards.map((card, index) => {\n        var _card$card_images, _card$card_images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"10px\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_card$card_images = card.card_images) === null || _card$card_images === void 0 ? void 0 : (_card$card_images$ = _card$card_images[0]) === null || _card$card_images$ === void 0 ? void 0 : _card$card_images$.image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, card.instanceId || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay cartas seleccionadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CardList","cards","setCards","_s","console","log","exportToFile","data","JSON","stringify","blob","Blob","type","a","document","createElement","href","URL","createObjectURL","download","click","importFromFile","event","file","target","files","reader","FileReader","onload","e","importedCards","parse","result","error","readAsText","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","style","display","flexWrap","length","map","card","index","_card$card_images","_card$card_images$","margin","textAlign","src","card_images","image_url","alt","name","width","instanceId","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction CardList({ cards, setCards }) {\r\n  useEffect(() => {\r\n    console.log(\"Cartas seleccionadas:\", cards);\r\n  }, [cards]);\r\n\r\n  // Guardar todo el array de cartas en un archivo JSON\r\n  const exportToFile = () => {\r\n    const data = JSON.stringify(cards, null, 2); \r\n    const blob = new Blob([data], { type: \"application/json\" });\r\n    const a = document.createElement(\"a\");\r\n    a.href = URL.createObjectURL(blob);\r\n    a.download = \"cartas_seleccionadas.json\";\r\n    a.click();\r\n  };\r\n\r\n  // Cargar todo el array de cartas desde un archivo JSON\r\n  const importFromFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        // Aquí están todas las cartas con su info completa\r\n        const importedCards = JSON.parse(e.target.result);\r\n        setCards(importedCards); \r\n      } catch (error) {\r\n        console.error(\"Error al importar archivo:\", error);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n      <button onClick={exportToFile}>Guardar Cartas</button>\r\n      <input type=\"file\" accept=\".json\" onChange={importFromFile} />\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.length > 0 ? (\r\n          cards.map((card, index) => (\r\n            <div\r\n              key={card.instanceId || index}\r\n              style={{ margin: \"10px\", textAlign: \"center\" }}\r\n            >\r\n              <img\r\n                src={card.card_images?.[0]?.image_url}\r\n                alt={card.name}\r\n                width=\"100\"\r\n              />\r\n              <p>{card.name}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay cartas seleccionadas.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}