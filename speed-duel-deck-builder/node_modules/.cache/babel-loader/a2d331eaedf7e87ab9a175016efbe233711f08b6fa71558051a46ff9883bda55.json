{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [mainDeck, setMainDeck] = useState([]);\n  const [extraDeck, setExtraDeck] = useState([]);\n\n  // Función para clasificar cartas automáticamente\n  const classifyCards = cards => {\n    const mainDeckCards = [];\n    const extraDeckCards = [];\n    cards.forEach(card => {\n      if (card.type.includes(\"Fusion\") || card.type.includes(\"Synchro\") || card.type.includes(\"XYZ\") || card.type.includes(\"Link\")) {\n        if (extraDeckCards.length < 15) {\n          extraDeckCards.push(card);\n        }\n      } else {\n        if (mainDeckCards.length < deckSize) {\n          mainDeckCards.push(card);\n        }\n      }\n    });\n    setMainDeck(mainDeckCards);\n    setExtraDeck(extraDeckCards);\n  };\n\n  // Función para agregar una carta individualmente\n  const addCardToDeck = card => {\n    if (card.type.includes(\"Fusion\") || card.type.includes(\"Synchro\") || card.type.includes(\"XYZ\") || card.type.includes(\"Link\")) {\n      if (extraDeck.length < 15) {\n        setExtraDeck([...extraDeck, card]);\n      } else {\n        alert(\"El Deck Extra ya tiene 15 cartas.\");\n      }\n    } else {\n      if (mainDeck.length < deckSize) {\n        setMainDeck([...mainDeck, card]);\n      } else {\n        alert(`El Main Deck ya tiene ${deckSize} cartas.`);\n      }\n    }\n  };\n\n  // Función para eliminar una carta del deck\n  const removeCardFromDeck = (card, deckType) => {\n    if (deckType === \"main\") {\n      setMainDeck(mainDeck.filter(c => c !== card));\n    } else {\n      setExtraDeck(extraDeck.filter(c => c !== card));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Main Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classifyCards(selectedCards),\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Main Deck (\", mainDeck.length, \"/\", deckSize, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mainDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromDeck(card, \"main\"),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Deck Extra (\", extraDeck.length, \"/15)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: extraDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromDeck(card, \"extra\"),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"4dpzkl+wLyG41FPpkoLlSzsiCSs=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","mainDeck","setMainDeck","extraDeck","setExtraDeck","classifyCards","cards","mainDeckCards","extraDeckCards","forEach","card","type","includes","length","push","addCardToDeck","alert","removeCardFromDeck","deckType","filter","c","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","Number","target","onClick","map","index","name","src","card_images","image_url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [mainDeck, setMainDeck] = useState([]);\r\n  const [extraDeck, setExtraDeck] = useState([]);\r\n\r\n  // Función para clasificar cartas automáticamente\r\n  const classifyCards = (cards) => {\r\n    const mainDeckCards = [];\r\n    const extraDeckCards = [];\r\n\r\n    cards.forEach((card) => {\r\n      if (\r\n        card.type.includes(\"Fusion\") ||\r\n        card.type.includes(\"Synchro\") ||\r\n        card.type.includes(\"XYZ\") ||\r\n        card.type.includes(\"Link\")\r\n      ) {\r\n        if (extraDeckCards.length < 15) {\r\n          extraDeckCards.push(card);\r\n        }\r\n      } else {\r\n        if (mainDeckCards.length < deckSize) {\r\n          mainDeckCards.push(card);\r\n        }\r\n      }\r\n    });\r\n\r\n    setMainDeck(mainDeckCards);\r\n    setExtraDeck(extraDeckCards);\r\n  };\r\n\r\n  // Función para agregar una carta individualmente\r\n  const addCardToDeck = (card) => {\r\n    if (\r\n      card.type.includes(\"Fusion\") ||\r\n      card.type.includes(\"Synchro\") ||\r\n      card.type.includes(\"XYZ\") ||\r\n      card.type.includes(\"Link\")\r\n    ) {\r\n      if (extraDeck.length < 15) {\r\n        setExtraDeck([...extraDeck, card]);\r\n      } else {\r\n        alert(\"El Deck Extra ya tiene 15 cartas.\");\r\n      }\r\n    } else {\r\n      if (mainDeck.length < deckSize) {\r\n        setMainDeck([...mainDeck, card]);\r\n      } else {\r\n        alert(`El Main Deck ya tiene ${deckSize} cartas.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para eliminar una carta del deck\r\n  const removeCardFromDeck = (card, deckType) => {\r\n    if (deckType === \"main\") {\r\n      setMainDeck(mainDeck.filter((c) => c !== card));\r\n    } else {\r\n      setExtraDeck(extraDeck.filter((c) => c !== card));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Main Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={() => classifyCards(selectedCards)}>Armar Deck</button>\r\n\r\n      {/* Main Deck */}\r\n      <div>\r\n        <h3>Main Deck ({mainDeck.length}/{deckSize})</h3>\r\n        <ul>\r\n          {mainDeck.map((card, index) => (\r\n            <li key={index}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n              <button onClick={() => removeCardFromDeck(card, \"main\")}>Eliminar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Deck Extra */}\r\n      <div>\r\n        <h3>Deck Extra ({extraDeck.length}/15)</h3>\r\n        <ul>\r\n          {extraDeck.map((card, index) => (\r\n            <li key={index}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n              <button onClick={() => removeCardFromDeck(card, \"extra\")}>Eliminar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}