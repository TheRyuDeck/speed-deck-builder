{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards\n}) {\n  _s();\n  const [savedCards, setSavedCards] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      if (user) {\n        console.log(\"Usuario autenticado:\", user.uid);\n        loadUserDeck(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const loadUserDeck = async userId => {\n    setLoading(true);\n    const decksRef = collection(db, \"decks\");\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\n    try {\n      const querySnapshot = await getDocs(q);\n      if (!querySnapshot.empty) {\n        const deckData = querySnapshot.docs[0].data();\n        console.log(\"Datos brutos de Firestore:\", deckData);\n        const loadedCards = [...deckData.mainDeck, ...deckData.extraDeck].map(card => ({\n          name: card.name || \"Carta Desconocida\",\n          type: card.type || \"Desconocido\",\n          card_images: card.card_images || [{\n            image_url: \"https://via.placeholder.com/100\"\n          }]\n        }));\n        console.log(\"Cartas despu√©s de formatear:\", loadedCards);\n        setSavedCards(loadedCards);\n      }\n    } catch (error) {\n      console.error(\"Error al cargar el deck:\", error);\n    }\n    setLoading(false);\n  };\n\n  // üîπ Guardar el deck actual en Firestore\n  const saveDeck = async deckName => {\n    if (!user) {\n      console.error(\"Usuario no autenticado.\");\n      return;\n    }\n    try {\n      const deckRef = doc(db, \"users\", user.uid, \"decks\", deckName);\n      await setDoc(deckRef, {\n        name: deckName,\n        cards: cards,\n        timestamp: new Date()\n      });\n      console.log(\"Deck guardado correctamente!\");\n    } catch (error) {\n      console.error(\"Error al guardar el deck:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cartas Seleccionadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando cartas guardadas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveDeck(\"MiDeck\"),\n      children: \"Guardar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: [cards.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cartas en la sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), savedCards.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cartas guardadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 35\n      }, this), savedCards.map((card, index) => {\n        var _card$card_images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"10px\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_card$card_images$ = card.card_images[0]) === null || _card$card_images$ === void 0 ? void 0 : _card$card_images$.image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, `saved-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"HISm1ZTNRZy8M53fL4B4NGbUeSA=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","useEffect","db","auth","collection","getDocs","doc","setDoc","jsxDEV","_jsxDEV","CardList","cards","_s","savedCards","setSavedCards","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","console","log","uid","loadUserDeck","userId","decksRef","q","query","where","querySnapshot","empty","deckData","docs","data","loadedCards","mainDeck","extraDeck","map","card","name","type","card_images","image_url","error","saveDeck","deckName","deckRef","timestamp","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","flexWrap","length","index","margin","textAlign","src","alt","width","_card$card_images$","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\"; \r\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\";\r\n\r\nfunction CardList({ cards }) {\r\n  const [savedCards, setSavedCards] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      if (user) {\r\n        console.log(\"Usuario autenticado:\", user.uid);\r\n        loadUserDeck(user.uid);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  \r\n  const loadUserDeck = async (userId) => {\r\n    setLoading(true);\r\n    const decksRef = collection(db, \"decks\");\r\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\r\n  \r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      if (!querySnapshot.empty) {\r\n        const deckData = querySnapshot.docs[0].data();\r\n        console.log(\"Datos brutos de Firestore:\", deckData);\r\n  \r\n        const loadedCards = [...deckData.mainDeck, ...deckData.extraDeck].map((card) => ({\r\n          name: card.name || \"Carta Desconocida\",\r\n          type: card.type || \"Desconocido\",\r\n          card_images: card.card_images || [{ image_url: \"https://via.placeholder.com/100\" }],\r\n        }));\r\n  \r\n        console.log(\"Cartas despu√©s de formatear:\", loadedCards);\r\n  \r\n        setSavedCards(loadedCards);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al cargar el deck:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  \r\n\r\n  // üîπ Guardar el deck actual en Firestore\r\n  const saveDeck = async (deckName) => {\r\n    if (!user) {\r\n      console.error(\"Usuario no autenticado.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const deckRef = doc(db, \"users\", user.uid, \"decks\", deckName);\r\n      await setDoc(deckRef, {\r\n        name: deckName,\r\n        cards: cards, \r\n        timestamp: new Date(),\r\n      });\r\n      console.log(\"Deck guardado correctamente!\");\r\n    } catch (error) {\r\n      console.error(\"Error al guardar el deck:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n\r\n      {loading ? <p>Cargando cartas guardadas...</p> : null}\r\n\r\n      <button onClick={() => saveDeck(\"MiDeck\")}>Guardar Deck</button>\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {/* Mostrar cartas seleccionadas en la sesi√≥n actual */}\r\n        {cards.length > 0 && <h3>Cartas en la sesi√≥n</h3>}\r\n        {cards.map((card, index) => (\r\n          <div key={index} style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n            <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Mostrar cartas recuperadas de Firestore */}\r\n        {savedCards.length > 0 && <h3>Cartas guardadas</h3>}\r\n        {savedCards.map((card, index) => (\r\n          <div key={`saved-${index}`} style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n            <img src={card.card_images[0]?.image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}