{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [mainDeck, setMainDeck] = useState([]);\n  const [extraDeck, setExtraDeck] = useState([]);\n  const [selectedCardId, setSelectedCardId] = useState(\"\");\n  const [keyCards, setKeyCards] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loadingDecks, setLoadingDecks] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      if (user) {\n        loadUserDecks(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const loadUserDecks = async userId => {\n    setLoadingDecks(true);\n    const decksRef = collection(db, \"decks\");\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\n    try {\n      const querySnapshot = await getDocs(q);\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          var _deckData$mainDeck, _deckData$extraDeck;\n          const deckData = doc.data();\n          console.log(\"Deck cargado desde Firestore:\", deckData);\n\n          // Asegurar que el formato sea el correcto\n          const formattedMainDeck = ((_deckData$mainDeck = deckData.mainDeck) === null || _deckData$mainDeck === void 0 ? void 0 : _deckData$mainDeck.map(card => {\n            var _card$card_images, _card$card_images$, _card$card_images2, _card$card_images2$;\n            return {\n              id: ((_card$card_images = card.card_images) === null || _card$card_images === void 0 ? void 0 : (_card$card_images$ = _card$card_images[0]) === null || _card$card_images$ === void 0 ? void 0 : _card$card_images$.id) || card.id,\n              // Asegurar ID correcto\n              name: card.name,\n              type: card.type,\n              image: (_card$card_images2 = card.card_images) === null || _card$card_images2 === void 0 ? void 0 : (_card$card_images2$ = _card$card_images2[0]) === null || _card$card_images2$ === void 0 ? void 0 : _card$card_images2$.image_url // Asegurar imagen\n            };\n          })) || [];\n          const formattedExtraDeck = ((_deckData$extraDeck = deckData.extraDeck) === null || _deckData$extraDeck === void 0 ? void 0 : _deckData$extraDeck.map(card => {\n            var _card$card_images3, _card$card_images3$, _card$card_images4, _card$card_images4$;\n            return {\n              id: ((_card$card_images3 = card.card_images) === null || _card$card_images3 === void 0 ? void 0 : (_card$card_images3$ = _card$card_images3[0]) === null || _card$card_images3$ === void 0 ? void 0 : _card$card_images3$.id) || card.id,\n              name: card.name,\n              type: card.type,\n              image: (_card$card_images4 = card.card_images) === null || _card$card_images4 === void 0 ? void 0 : (_card$card_images4$ = _card$card_images4[0]) === null || _card$card_images4$ === void 0 ? void 0 : _card$card_images4$.image_url\n            };\n          })) || [];\n          setMainDeck(formattedMainDeck);\n          setExtraDeck(formattedExtraDeck);\n        });\n      } else {\n        console.log(\"No se encontraron decks guardados.\");\n      }\n    } catch (error) {\n      console.error(\"Error cargando decks:\", error);\n    }\n    setLoadingDecks(false);\n  };\n  const saveDeckToFirestore = async () => {\n    if (!user) {\n      alert(\"Debes iniciar sesión para guardar el deck.\");\n      return;\n    }\n    try {\n      await addDoc(collection(db, \"decks\"), {\n        userId: user.uid,\n        mainDeck,\n        extraDeck,\n        timestamp: new Date()\n      });\n      alert(\"Deck guardado con éxito!\");\n    } catch (error) {\n      console.error(\"Error guardando deck:\", error);\n      alert(\"Hubo un error al guardar el deck.\");\n    }\n  };\n  const classifyCards = cards => {\n    let newMainDeck = [...mainDeck];\n    let newExtraDeck = [...extraDeck];\n    cards.forEach(card => {\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => card.type.includes(type))) {\n        if (newExtraDeck.length < 15) newExtraDeck.push(card);\n      } else {\n        if (newMainDeck.length < deckSize) newMainDeck.push(card);\n      }\n    });\n    setMainDeck(newMainDeck);\n    setExtraDeck(newExtraDeck);\n  };\n  const buildAroundKeyCards = () => {\n    let filteredCards = selectedCards.filter(card => keyCards.some(keyCard => keyCard.card_images[0].id === card.card_images[0].id));\n    classifyCards(filteredCards);\n  };\n  const addKeyCard = card => {\n    if (!keyCards.some(keyCard => keyCard.card_images[0].id === card.card_images[0].id)) {\n      setKeyCards([...keyCards, card]);\n    }\n  };\n  const addSelectedCard = () => {\n    const selectedCard = selectedCards.find(card => card.card_images[0].id === Number(selectedCardId));\n    if (!selectedCard) return;\n    if (selectedCard.type.includes(\"Fusion\") || selectedCard.type.includes(\"Synchro\") || selectedCard.type.includes(\"XYZ\") || selectedCard.type.includes(\"Link\")) {\n      addCardToExtraDeck(selectedCard);\n    } else {\n      addCardToMainDeck(selectedCard);\n    }\n  };\n  const addCardToMainDeck = card => {\n    if (mainDeck.length < deckSize) setMainDeck([...mainDeck, card]);else alert(`El Main Deck ya tiene ${deckSize} cartas.`);\n  };\n  const addCardToExtraDeck = card => {\n    if (extraDeck.length < 15) setExtraDeck([...extraDeck, card]);else alert(\"El Deck Extra ya tiene 15 cartas.\");\n  };\n  const removeCardFromMainDeck = card => {\n    const index = mainDeck.findIndex(c => c.card_images[0].id === card.card_images[0].id);\n    if (index !== -1) {\n      const newDeck = [...mainDeck];\n      newDeck.splice(index, 1);\n      setMainDeck(newDeck);\n    }\n  };\n  const removeCardFromExtraDeck = card => {\n    setExtraDeck(extraDeck.filter(c => c.id !== card.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Main Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classifyCards(selectedCards),\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveDeckToFirestore,\n      children: \"Guardar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), loadingDecks && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando decks guardados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Seleccionar Cartas Clave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => addKeyCard(selectedCards.find(c => c.id === Number(e.target.value))),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona una carta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: card.id,\n        children: card.name\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildAroundKeyCards,\n      children: \"Construir alrededor de cartas clave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Agregar Carta Manualmente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedCardId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona una carta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: card.id,\n        children: card.name\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSelectedCard,\n      children: \"A\\xF1adir Carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Main Deck (\", mainDeck.length, \"/\", deckSize, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mainDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromMainDeck(card),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, `${card.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Extra Deck (\", extraDeck.length, \"/15)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: extraDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromExtraDeck(card),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, `${card.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"DrDmAju2mmb+UCUjXg+bC146+Mc=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","useEffect","db","auth","collection","addDoc","getDocs","query","where","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","mainDeck","setMainDeck","extraDeck","setExtraDeck","selectedCardId","setSelectedCardId","keyCards","setKeyCards","user","setUser","loadingDecks","setLoadingDecks","unsubscribe","onAuthStateChanged","loadUserDecks","uid","userId","decksRef","q","querySnapshot","empty","forEach","doc","_deckData$mainDeck","_deckData$extraDeck","deckData","data","console","log","formattedMainDeck","map","card","_card$card_images","_card$card_images$","_card$card_images2","_card$card_images2$","id","card_images","name","type","image","image_url","formattedExtraDeck","_card$card_images3","_card$card_images3$","_card$card_images4","_card$card_images4$","error","saveDeckToFirestore","alert","timestamp","Date","classifyCards","cards","newMainDeck","newExtraDeck","some","includes","length","push","buildAroundKeyCards","filteredCards","filter","keyCard","addKeyCard","addSelectedCard","selectedCard","find","Number","addCardToExtraDeck","addCardToMainDeck","removeCardFromMainDeck","index","findIndex","c","newDeck","splice","removeCardFromExtraDeck","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\"; \r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [mainDeck, setMainDeck] = useState([]);\r\n  const [extraDeck, setExtraDeck] = useState([]);\r\n  const [selectedCardId, setSelectedCardId] = useState(\"\");\r\n  const [keyCards, setKeyCards] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingDecks, setLoadingDecks] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      if (user) {\r\n        loadUserDecks(user.uid);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n \r\n  const loadUserDecks = async (userId) => {\r\n    setLoadingDecks(true);\r\n    const decksRef = collection(db, \"decks\");\r\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\r\n  \r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      if (!querySnapshot.empty) {\r\n        querySnapshot.forEach((doc) => {\r\n          const deckData = doc.data();\r\n          console.log(\"Deck cargado desde Firestore:\", deckData);\r\n  \r\n          // Asegurar que el formato sea el correcto\r\n          const formattedMainDeck = deckData.mainDeck?.map((card) => ({\r\n            id: card.card_images?.[0]?.id || card.id, // Asegurar ID correcto\r\n            name: card.name,\r\n            type: card.type,\r\n            image: card.card_images?.[0]?.image_url, // Asegurar imagen\r\n          })) || [];\r\n  \r\n          const formattedExtraDeck = deckData.extraDeck?.map((card) => ({\r\n            id: card.card_images?.[0]?.id || card.id,\r\n            name: card.name,\r\n            type: card.type,\r\n            image: card.card_images?.[0]?.image_url,\r\n          })) || [];\r\n  \r\n          setMainDeck(formattedMainDeck);\r\n          setExtraDeck(formattedExtraDeck);\r\n        });\r\n      } else {\r\n        console.log(\"No se encontraron decks guardados.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error cargando decks:\", error);\r\n    }\r\n    setLoadingDecks(false);\r\n  };\r\n  \r\n\r\n  const saveDeckToFirestore = async () => {\r\n    if (!user) {\r\n      alert(\"Debes iniciar sesión para guardar el deck.\");\r\n      return;\r\n    }\r\n    try {\r\n      await addDoc(collection(db, \"decks\"), {\r\n        userId: user.uid,\r\n        mainDeck,\r\n        extraDeck,\r\n        timestamp: new Date(),\r\n      });\r\n      alert(\"Deck guardado con éxito!\");\r\n    } catch (error) {\r\n      console.error(\"Error guardando deck:\", error);\r\n      alert(\"Hubo un error al guardar el deck.\");\r\n    }\r\n  };\r\n\r\n  const classifyCards = (cards) => {\r\n    let newMainDeck = [...mainDeck];\r\n    let newExtraDeck = [...extraDeck];\r\n    cards.forEach((card) => {\r\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => card.type.includes(type))) {\r\n        if (newExtraDeck.length < 15) newExtraDeck.push(card);\r\n      } else {\r\n        if (newMainDeck.length < deckSize) newMainDeck.push(card);\r\n      }\r\n    });\r\n    setMainDeck(newMainDeck);\r\n    setExtraDeck(newExtraDeck);\r\n  };\r\n\r\n  const buildAroundKeyCards = () => {\r\n    let filteredCards = selectedCards.filter((card) =>\r\n      keyCards.some((keyCard) => keyCard.card_images[0].id === card.card_images[0].id)\r\n    );\r\n  \r\n    classifyCards(filteredCards);\r\n  };\r\n  \r\n\r\n  const addKeyCard = (card) => {\r\n    if (!keyCards.some((keyCard) => keyCard.card_images[0].id === card.card_images[0].id)) {\r\n      setKeyCards([...keyCards, card]);\r\n    }\r\n  };\r\n  \r\n\r\n  const addSelectedCard = () => {\r\n    const selectedCard = selectedCards.find(\r\n      (card) => card.card_images[0].id === Number(selectedCardId)\r\n    );\r\n  \r\n    if (!selectedCard) return;\r\n  \r\n    if (\r\n      selectedCard.type.includes(\"Fusion\") ||\r\n      selectedCard.type.includes(\"Synchro\") ||\r\n      selectedCard.type.includes(\"XYZ\") ||\r\n      selectedCard.type.includes(\"Link\")\r\n    ) {\r\n      addCardToExtraDeck(selectedCard);\r\n    } else {\r\n      addCardToMainDeck(selectedCard);\r\n    }\r\n  };\r\n  \r\n\r\n  const addCardToMainDeck = (card) => {\r\n    if (mainDeck.length < deckSize) setMainDeck([...mainDeck, card]);\r\n    else alert(`El Main Deck ya tiene ${deckSize} cartas.`);\r\n  };\r\n\r\n  const addCardToExtraDeck = (card) => {\r\n    if (extraDeck.length < 15) setExtraDeck([...extraDeck, card]);\r\n    else alert(\"El Deck Extra ya tiene 15 cartas.\");\r\n  };\r\n\r\n  const removeCardFromMainDeck = (card) => {\r\n    const index = mainDeck.findIndex((c) => c.card_images[0].id === card.card_images[0].id);\r\n    if (index !== -1) {\r\n      const newDeck = [...mainDeck];\r\n      newDeck.splice(index, 1);\r\n      setMainDeck(newDeck);\r\n    }\r\n  };\r\n  \r\n\r\n  const removeCardFromExtraDeck = (card) => {\r\n    setExtraDeck(extraDeck.filter((c) => c.id !== card.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Main Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={() => classifyCards(selectedCards)}>Armar Deck</button>\r\n      <button onClick={saveDeckToFirestore}>Guardar Deck</button>\r\n      {loadingDecks && <p>Cargando decks guardados...</p>}\r\n      <h3>Seleccionar Cartas Clave</h3>\r\n      <select onChange={(e) => addKeyCard(selectedCards.find((c) => c.id === Number(e.target.value)))}>\r\n        <option value=\"\">Selecciona una carta</option>\r\n        {selectedCards.map((card) => (\r\n          <option key={card.id} value={card.id}>{card.name}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={buildAroundKeyCards}>Construir alrededor de cartas clave</button>\r\n      <h3>Agregar Carta Manualmente</h3>\r\n      <select onChange={(e) => setSelectedCardId(e.target.value)}>\r\n        <option value=\"\">Selecciona una carta</option>\r\n        {selectedCards.map((card) => (\r\n          <option key={card.id} value={card.id}>{card.name}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={addSelectedCard}>Añadir Carta</button>\r\n      <div>\r\n        <h3>Main Deck ({mainDeck.length}/{deckSize})</h3>\r\n        <ul>\r\n          {mainDeck.map((card, index) => (\r\n            <li key={`${card.id}-${index}`}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <button onClick={() => removeCardFromMainDeck(card)}>Eliminar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Extra Deck ({extraDeck.length}/15)</h3>\r\n        <ul>\r\n          {extraDeck.map((card, index) => (\r\n            <li key={`${card.id}-${index}`}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <button onClick={() => removeCardFromExtraDeck(card)}>Eliminar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}