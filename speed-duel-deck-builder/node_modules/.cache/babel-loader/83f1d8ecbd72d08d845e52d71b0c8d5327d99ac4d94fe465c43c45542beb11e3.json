{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [finalDeck, setFinalDeck] = useState([]);\n  const [keyCards, setKeyCards] = useState([]);\n  const toggleKeyCard = card => {\n    setKeyCards(prev => prev.includes(card) ? prev.filter(c => c !== card) : [...prev, card]);\n  };\n  const buildDeck = () => {\n    if (selectedCards.length < deckSize) {\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\n      return;\n    }\n\n    // Priorizar cartas clave\n    let deck = [...keyCards];\n\n    // Filtrar y agregar cartas con sinergia\n    const remainingCards = selectedCards.filter(card => !keyCards.includes(card));\n    const synergisticCards = remainingCards.sort((a, b) => {\n      const aSynergy = keyCards.some(kc => kc.type === a.type) ? 1 : 0;\n      const bSynergy = keyCards.some(kc => kc.type === b.type) ? 1 : 0;\n      return bSynergy - aSynergy;\n    });\n    deck = [...deck, ...synergisticCards.slice(0, deckSize - keyCards.length)];\n    setFinalDeck(deck);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildDeck,\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Selecciona Cartas Clave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: keyCards.includes(card),\n          onChange: () => toggleKeyCard(card)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), card.name]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), finalDeck.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deck Generado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: finalDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"w3I+EzaMNwXud1IT0vcuYJT1yeU=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","finalDeck","setFinalDeck","keyCards","setKeyCards","toggleKeyCard","card","prev","includes","filter","c","buildDeck","length","alert","deck","remainingCards","synergisticCards","sort","a","b","aSynergy","some","kc","type","bSynergy","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","Number","target","onClick","map","checked","name","id","index","src","card_images","image_url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [finalDeck, setFinalDeck] = useState([]);\r\n  const [keyCards, setKeyCards] = useState([]);\r\n\r\n  const toggleKeyCard = (card) => {\r\n    setKeyCards((prev) =>\r\n      prev.includes(card) ? prev.filter((c) => c !== card) : [...prev, card]\r\n    );\r\n  };\r\n\r\n  const buildDeck = () => {\r\n    if (selectedCards.length < deckSize) {\r\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\r\n      return;\r\n    }\r\n\r\n    // Priorizar cartas clave\r\n    let deck = [...keyCards];\r\n\r\n    // Filtrar y agregar cartas con sinergia\r\n    const remainingCards = selectedCards.filter((card) => !keyCards.includes(card));\r\n    const synergisticCards = remainingCards.sort((a, b) => {\r\n      const aSynergy = keyCards.some((kc) => kc.type === a.type) ? 1 : 0;\r\n      const bSynergy = keyCards.some((kc) => kc.type === b.type) ? 1 : 0;\r\n      return bSynergy - aSynergy;\r\n    });\r\n\r\n    deck = [...deck, ...synergisticCards.slice(0, deckSize - keyCards.length)];\r\n    setFinalDeck(deck);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={buildDeck}>Armar Deck</button>\r\n\r\n      <h3>Selecciona Cartas Clave</h3>\r\n      <ul>\r\n        {selectedCards.map((card) => (\r\n          <li key={card.id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={keyCards.includes(card)}\r\n              onChange={() => toggleKeyCard(card)}\r\n            />\r\n            {card.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {finalDeck.length > 0 && (\r\n        <div>\r\n          <h3>Deck Generado</h3>\r\n          <ul>\r\n            {finalDeck.map((card, index) => (\r\n              <li key={index}>\r\n                <strong>{card.name}</strong> - {card.type}\r\n                <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,aAAa,GAAIC,IAAI,IAAK;IAC9BF,WAAW,CAAEG,IAAI,IACfA,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,IAAI,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,IAAI,CACvE,CAAC;EACH,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAId,aAAa,CAACe,MAAM,GAAGb,QAAQ,EAAE;MACnCc,KAAK,CAAC,gEAAgE,CAAC;MACvE;IACF;;IAEA;IACA,IAAIC,IAAI,GAAG,CAAC,GAAGX,QAAQ,CAAC;;IAExB;IACA,MAAMY,cAAc,GAAGlB,aAAa,CAACY,MAAM,CAAEH,IAAI,IAAK,CAACH,QAAQ,CAACK,QAAQ,CAACF,IAAI,CAAC,CAAC;IAC/E,MAAMU,gBAAgB,GAAGD,cAAc,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrD,MAAMC,QAAQ,GAAGjB,QAAQ,CAACkB,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKL,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;MAClE,MAAMC,QAAQ,GAAGrB,QAAQ,CAACkB,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKJ,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;MAClE,OAAOC,QAAQ,GAAGJ,QAAQ;IAC5B,CAAC,CAAC;IAEFN,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE,GAAGE,gBAAgB,CAACS,KAAK,CAAC,CAAC,EAAE1B,QAAQ,GAAGI,QAAQ,CAACS,MAAM,CAAC,CAAC;IAC1EV,YAAY,CAACY,IAAI,CAAC;EACpB,CAAC;EAED,oBACEnB,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnC,OAAA;MAAA+B,QAAA,GAAO,qBAEL,eAAA/B,OAAA;QACE4B,IAAI,EAAC,QAAQ;QACbQ,GAAG,EAAC,IAAI;QACRC,GAAG,EAAC,IAAI;QACRC,KAAK,EAAElC,QAAS;QAChBmC,QAAQ,EAAGC,CAAC,IAAKnC,WAAW,CAACoC,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRnC,OAAA;MAAQ2C,OAAO,EAAE3B,SAAU;MAAAe,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/CnC,OAAA;MAAA+B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnC,OAAA;MAAA+B,QAAA,EACG7B,aAAa,CAAC0C,GAAG,CAAEjC,IAAI,iBACtBX,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfiB,OAAO,EAAErC,QAAQ,CAACK,QAAQ,CAACF,IAAI,CAAE;UACjC4B,QAAQ,EAAEA,CAAA,KAAM7B,aAAa,CAACC,IAAI;QAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,EACDxB,IAAI,CAACmC,IAAI;MAAA,GANHnC,IAAI,CAACoC,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJ7B,SAAS,CAACW,MAAM,GAAG,CAAC,iBACnBjB,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBnC,OAAA;QAAA+B,QAAA,EACGzB,SAAS,CAACsC,GAAG,CAAC,CAACjC,IAAI,EAAEqC,KAAK,kBACzBhD,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAASpB,IAAI,CAACmC;UAAI;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAACxB,IAAI,CAACiB,IAAI,eACzC5B,OAAA;YAAKiD,GAAG,EAAEtC,IAAI,CAACuC,WAAW,CAAC,CAAC,CAAC,CAACC,SAAU;YAACC,GAAG,EAAEzC,IAAI,CAACmC,IAAK;YAACO,KAAK,EAAC;UAAK;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAFhEa,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CA5EQF,WAAW;AAAAqD,EAAA,GAAXrD,WAAW;AA8EpB,eAAeA,WAAW;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}