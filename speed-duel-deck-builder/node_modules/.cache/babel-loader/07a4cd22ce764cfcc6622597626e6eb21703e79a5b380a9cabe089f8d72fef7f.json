{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardSearch({\n  addToDeck\n}) {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [cards, setCards] = useState([]); // Ahora es una lista de cartas\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchCardInfo = async () => {\n    setLoading(true);\n    setError(\"\");\n    setCards([]); // Limpiamos los resultados previos\n\n    try {\n      const response = await fetch(`https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${encodeURIComponent(query)}` // Ahora usamos \"fname\" para búsqueda parcial\n      );\n      const data = await response.json();\n      if (data.data) {\n        setCards(data.data); // Guardamos todas las coincidencias\n      } else {\n        setError(\"No se encontraron cartas. Prueba con otro nombre.\");\n      }\n    } catch (err) {\n      setError(\"Error al buscar la carta.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscador de Cartas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Escribe el nombre de la carta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCardInfo,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Buscando cartas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resultados encontrados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 20\n            }, this), \" \", card.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descripci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 20\n            }, this), \" \", card.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToDeck(card),\n            children: \"Agregar al mazo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(CardSearch, \"8juNkUDtl7LjliBeJ/zIxFcWc7o=\");\n_c = CardSearch;\nexport default CardSearch;\nvar _c;\n$RefreshReg$(_c, \"CardSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardSearch","addToDeck","_s","query","setQuery","cards","setCards","loading","setLoading","error","setError","fetchCardInfo","response","fetch","encodeURIComponent","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","length","map","card","marginBottom","name","src","card_images","image_url","alt","width","desc","id","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction CardSearch({ addToDeck }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [cards, setCards] = useState([]); // Ahora es una lista de cartas\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchCardInfo = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setCards([]); // Limpiamos los resultados previos\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${encodeURIComponent(query)}` // Ahora usamos \"fname\" para búsqueda parcial\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.data) {\r\n        setCards(data.data); // Guardamos todas las coincidencias\r\n      } else {\r\n        setError(\"No se encontraron cartas. Prueba con otro nombre.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al buscar la carta.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Buscador de Cartas</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Escribe el nombre de la carta...\"\r\n      />\r\n      <button onClick={fetchCardInfo}>Buscar</button>\r\n\r\n      {loading && <p>Buscando cartas...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {cards.length > 0 && (\r\n        <div>\r\n          <h3>Resultados encontrados:</h3>\r\n          <ul>\r\n            {cards.map((card) => (\r\n              <li key={card.id} style={{ marginBottom: \"10px\" }}>\r\n                <h4>{card.name}</h4>\r\n                <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n                <p><strong>Tipo:</strong> {card.type}</p>\r\n                <p><strong>Descripción:</strong> {card.desc}</p>\r\n                <button onClick={() => addToDeck(card)}>Agregar al mazo</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}