{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [finalDeck, setFinalDeck] = useState([]);\n  const buildDeck = () => {\n    if (selectedCards.length < deckSize) {\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\n      return;\n    }\n\n    // Agrupar cartas por tipo\n    const cardGroups = selectedCards.reduce((acc, card) => {\n      acc[card.type] = acc[card.type] || [];\n      acc[card.type].push(card);\n      return acc;\n    }, {});\n\n    // Seleccionar cartas priorizando sinergia\n    const sortedCards = Object.values(cardGroups).flat().sort((a, b) => b.atk - a.atk); // Ejemplo de prioridad: ATK alto\n\n    // Seleccionar las primeras cartas según el tamaño del deck\n    setFinalDeck(sortedCards.slice(0, deckSize));\n  };\n  const removeCard = index => {\n    setFinalDeck(finalDeck.filter((_, i) => i !== index));\n  };\n  const moveCard = (index, direction) => {\n    const newDeck = [...finalDeck];\n    const targetIndex = index + direction;\n    if (targetIndex >= 0 && targetIndex < newDeck.length) {\n      [newDeck[index], newDeck[targetIndex]] = [newDeck[targetIndex], newDeck[index]];\n      setFinalDeck(newDeck);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildDeck,\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), finalDeck.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deck Generado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: finalDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCard(index),\n            children: \"\\u274C Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveCard(index, -1),\n            children: \"\\u2B06\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveCard(index, 1),\n            children: \"\\u2B07\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"2z8RhvViYa+BohRFVnTsG7TMfEI=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","finalDeck","setFinalDeck","buildDeck","length","alert","cardGroups","reduce","acc","card","type","push","sortedCards","Object","values","flat","sort","a","b","atk","slice","removeCard","index","filter","_","i","moveCard","direction","newDeck","targetIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","Number","target","onClick","map","name","src","card_images","image_url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [finalDeck, setFinalDeck] = useState([]);\r\n\r\n  const buildDeck = () => {\r\n    if (selectedCards.length < deckSize) {\r\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\r\n      return;\r\n    }\r\n\r\n    // Agrupar cartas por tipo\r\n    const cardGroups = selectedCards.reduce((acc, card) => {\r\n      acc[card.type] = acc[card.type] || [];\r\n      acc[card.type].push(card);\r\n      return acc;\r\n    }, {});\r\n\r\n    // Seleccionar cartas priorizando sinergia\r\n    const sortedCards = Object.values(cardGroups)\r\n      .flat()\r\n      .sort((a, b) => b.atk - a.atk); // Ejemplo de prioridad: ATK alto\r\n\r\n    // Seleccionar las primeras cartas según el tamaño del deck\r\n    setFinalDeck(sortedCards.slice(0, deckSize));\r\n  };\r\n\r\n  const removeCard = (index) => {\r\n    setFinalDeck(finalDeck.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const moveCard = (index, direction) => {\r\n    const newDeck = [...finalDeck];\r\n    const targetIndex = index + direction;\r\n\r\n    if (targetIndex >= 0 && targetIndex < newDeck.length) {\r\n      [newDeck[index], newDeck[targetIndex]] = [newDeck[targetIndex], newDeck[index]];\r\n      setFinalDeck(newDeck);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={buildDeck}>Armar Deck</button>\r\n\r\n      {finalDeck.length > 0 && (\r\n        <div>\r\n          <h3>Deck Generado</h3>\r\n          <ul>\r\n            {finalDeck.map((card, index) => (\r\n              <li key={index}>\r\n                <strong>{card.name}</strong> - {card.type}\r\n                <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n                <button onClick={() => removeCard(index)}>❌ Eliminar</button>\r\n                <button onClick={() => moveCard(index, -1)}>⬆️</button>\r\n                <button onClick={() => moveCard(index, 1)}>⬇️</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}