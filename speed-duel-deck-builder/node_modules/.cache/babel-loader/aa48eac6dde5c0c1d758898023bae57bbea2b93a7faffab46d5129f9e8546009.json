{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\"; // Importa Firestore y Auth\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [mainDeck, setMainDeck] = useState([]);\n  const [extraDeck, setExtraDeck] = useState([]);\n  const [selectedCardId, setSelectedCardId] = useState(\"\");\n  const [keyCards, setKeyCards] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loadingDecks, setLoadingDecks] = useState(true);\n\n  // Función para unificar el formato de una carta\n  const standardizeCard = card => {\n    var _card$card_images, _card$card_images$;\n    return {\n      id: Number(((_card$card_images = card.card_images) === null || _card$card_images === void 0 ? void 0 : (_card$card_images$ = _card$card_images[0]) === null || _card$card_images$ === void 0 ? void 0 : _card$card_images$.id) || card.id),\n      name: card.name,\n      type: card.type,\n      card_images: card.card_images || [{\n        image_url: \"https://via.placeholder.com/100\",\n        id: 0\n      }]\n      // Puedes incluir otros campos si los necesitas, como archetype, attribute, etc.\n    };\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      if (user) {\n        loadUserDecks(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Recuperar decks guardados y formatear los datos\n  const loadUserDecks = async userId => {\n    setLoadingDecks(true);\n    const decksRef = collection(db, \"decks\");\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\n    try {\n      const querySnapshot = await getDocs(q);\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          var _deckData$mainDeck, _deckData$extraDeck;\n          const deckData = doc.data();\n          console.log(\"Deck cargado desde Firestore:\", deckData);\n          const formattedMainDeck = ((_deckData$mainDeck = deckData.mainDeck) === null || _deckData$mainDeck === void 0 ? void 0 : _deckData$mainDeck.map(standardizeCard)) || [];\n          const formattedExtraDeck = ((_deckData$extraDeck = deckData.extraDeck) === null || _deckData$extraDeck === void 0 ? void 0 : _deckData$extraDeck.map(standardizeCard)) || [];\n          setMainDeck(formattedMainDeck);\n          setExtraDeck(formattedExtraDeck);\n        });\n      } else {\n        console.log(\"No se encontraron decks guardados.\");\n      }\n    } catch (error) {\n      console.error(\"Error cargando decks:\", error);\n    }\n    setLoadingDecks(false);\n  };\n\n  // Guardar deck en Firestore\n  const saveDeckToFirestore = async () => {\n    if (!user) {\n      alert(\"Debes iniciar sesión para guardar el deck.\");\n      return;\n    }\n    try {\n      await addDoc(collection(db, \"decks\"), {\n        userId: user.uid,\n        mainDeck: mainDeck.map(standardizeCard),\n        extraDeck: extraDeck.map(standardizeCard),\n        timestamp: new Date()\n      });\n      alert(\"Deck guardado con éxito!\");\n    } catch (error) {\n      console.error(\"Error guardando deck:\", error);\n      alert(\"Hubo un error al guardar el deck.\");\n    }\n  };\n\n  // Clasificar cartas automáticamente\n  const classifyCards = cards => {\n    let newMainDeck = [];\n    let newExtraDeck = [];\n    cards.forEach(card => {\n      const stdCard = standardizeCard(card);\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => stdCard.type.includes(type))) {\n        if (newExtraDeck.length < 15) newExtraDeck.push(stdCard);\n      } else {\n        if (newMainDeck.length < deckSize) newMainDeck.push(stdCard);\n      }\n    });\n    setMainDeck(newMainDeck);\n    setExtraDeck(newExtraDeck);\n  };\n\n  // Construir deck alrededor de cartas clave\n  const buildAroundKeyCards = () => {\n    let filteredCards = selectedCards.filter(card => keyCards.some(keyCard => Number(standardizeCard(keyCard).id) === Number(standardizeCard(card).id)));\n    classifyCards(filteredCards);\n  };\n\n  // Agregar carta clave\n  const addKeyCard = card => {\n    const stdCard = standardizeCard(card);\n    if (!keyCards.some(keyCard => Number(standardizeCard(keyCard).id) === Number(stdCard.id))) {\n      setKeyCards([...keyCards, stdCard]);\n    }\n  };\n\n  // Agregar carta manualmente\n  const addSelectedCard = () => {\n    const selectedCard = selectedCards.find(card => Number(standardizeCard(card).id) === Number(selectedCardId));\n    if (!selectedCard) return;\n    if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => selectedCard.type.includes(type))) {\n      addCardToExtraDeck(selectedCard);\n    } else {\n      addCardToMainDeck(selectedCard);\n    }\n  };\n  const addCardToMainDeck = card => {\n    const stdCard = standardizeCard(card);\n    if (mainDeck.length < deckSize) setMainDeck([...mainDeck, stdCard]);else alert(`El Main Deck ya tiene ${deckSize} cartas.`);\n  };\n  const addCardToExtraDeck = card => {\n    const stdCard = standardizeCard(card);\n    if (extraDeck.length < 15) setExtraDeck([...extraDeck, stdCard]);else alert(\"El Deck Extra ya tiene 15 cartas.\");\n  };\n  const removeCardFromMainDeck = card => {\n    const stdCard = standardizeCard(card);\n    setMainDeck(mainDeck.filter(c => Number(c.id) !== Number(stdCard.id)));\n  };\n  const removeCardFromExtraDeck = card => {\n    const stdCard = standardizeCard(card);\n    setExtraDeck(extraDeck.filter(c => Number(c.id) !== Number(stdCard.id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Main Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classifyCards(selectedCards),\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveDeckToFirestore,\n      children: \"Guardar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), loadingDecks && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando decks guardados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Seleccionar Cartas Clave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => addKeyCard(selectedCards.find(c => Number(c.id) === Number(e.target.value))),\n      defaultValue: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona una carta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: card.id,\n        children: card.name\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildAroundKeyCards,\n      children: \"Construir alrededor de cartas clave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Agregar Carta Manualmente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedCardId(e.target.value),\n      defaultValue: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona una carta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: card.id,\n        children: card.name\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSelectedCard,\n      children: \"A\\xF1adir Carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Main Deck (\", mainDeck.length, \"/\", deckSize, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mainDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromMainDeck(card),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, `${card.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Extra Deck (\", extraDeck.length, \"/15)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: extraDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCardFromExtraDeck(card),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, `${card.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"DrDmAju2mmb+UCUjXg+bC146+Mc=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","useEffect","db","auth","collection","addDoc","getDocs","query","where","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","mainDeck","setMainDeck","extraDeck","setExtraDeck","selectedCardId","setSelectedCardId","keyCards","setKeyCards","user","setUser","loadingDecks","setLoadingDecks","standardizeCard","card","_card$card_images","_card$card_images$","id","Number","card_images","name","type","image_url","unsubscribe","onAuthStateChanged","loadUserDecks","uid","userId","decksRef","q","querySnapshot","empty","forEach","doc","_deckData$mainDeck","_deckData$extraDeck","deckData","data","console","log","formattedMainDeck","map","formattedExtraDeck","error","saveDeckToFirestore","alert","timestamp","Date","classifyCards","cards","newMainDeck","newExtraDeck","stdCard","some","includes","length","push","buildAroundKeyCards","filteredCards","filter","keyCard","addKeyCard","addSelectedCard","selectedCard","find","addCardToExtraDeck","addCardToMainDeck","removeCardFromMainDeck","c","removeCardFromExtraDeck","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","target","onClick","defaultValue","index","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\"; // Importa Firestore y Auth\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [mainDeck, setMainDeck] = useState([]);\r\n  const [extraDeck, setExtraDeck] = useState([]);\r\n  const [selectedCardId, setSelectedCardId] = useState(\"\");\r\n  const [keyCards, setKeyCards] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingDecks, setLoadingDecks] = useState(true);\r\n\r\n  // Función para unificar el formato de una carta\r\n  const standardizeCard = (card) => {\r\n    return {\r\n      id: Number(card.card_images?.[0]?.id || card.id),\r\n      name: card.name,\r\n      type: card.type,\r\n      card_images: card.card_images || [{ image_url: \"https://via.placeholder.com/100\", id: 0 }],\r\n      // Puedes incluir otros campos si los necesitas, como archetype, attribute, etc.\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      if (user) {\r\n        loadUserDecks(user.uid);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Recuperar decks guardados y formatear los datos\r\n  const loadUserDecks = async (userId) => {\r\n    setLoadingDecks(true);\r\n    const decksRef = collection(db, \"decks\");\r\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      if (!querySnapshot.empty) {\r\n        querySnapshot.forEach((doc) => {\r\n          const deckData = doc.data();\r\n          console.log(\"Deck cargado desde Firestore:\", deckData);\r\n          const formattedMainDeck = deckData.mainDeck?.map(standardizeCard) || [];\r\n          const formattedExtraDeck = deckData.extraDeck?.map(standardizeCard) || [];\r\n          setMainDeck(formattedMainDeck);\r\n          setExtraDeck(formattedExtraDeck);\r\n        });\r\n      } else {\r\n        console.log(\"No se encontraron decks guardados.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error cargando decks:\", error);\r\n    }\r\n    setLoadingDecks(false);\r\n  };\r\n\r\n  // Guardar deck en Firestore\r\n  const saveDeckToFirestore = async () => {\r\n    if (!user) {\r\n      alert(\"Debes iniciar sesión para guardar el deck.\");\r\n      return;\r\n    }\r\n    try {\r\n      await addDoc(collection(db, \"decks\"), {\r\n        userId: user.uid,\r\n        mainDeck: mainDeck.map(standardizeCard),\r\n        extraDeck: extraDeck.map(standardizeCard),\r\n        timestamp: new Date(),\r\n      });\r\n      alert(\"Deck guardado con éxito!\");\r\n    } catch (error) {\r\n      console.error(\"Error guardando deck:\", error);\r\n      alert(\"Hubo un error al guardar el deck.\");\r\n    }\r\n  };\r\n\r\n  // Clasificar cartas automáticamente\r\n  const classifyCards = (cards) => {\r\n    let newMainDeck = [];\r\n    let newExtraDeck = [];\r\n    cards.forEach((card) => {\r\n      const stdCard = standardizeCard(card);\r\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some((type) => stdCard.type.includes(type))) {\r\n        if (newExtraDeck.length < 15) newExtraDeck.push(stdCard);\r\n      } else {\r\n        if (newMainDeck.length < deckSize) newMainDeck.push(stdCard);\r\n      }\r\n    });\r\n    setMainDeck(newMainDeck);\r\n    setExtraDeck(newExtraDeck);\r\n  };\r\n\r\n  // Construir deck alrededor de cartas clave\r\n  const buildAroundKeyCards = () => {\r\n    let filteredCards = selectedCards.filter((card) =>\r\n      keyCards.some(\r\n        (keyCard) =>\r\n          Number(standardizeCard(keyCard).id) === Number(standardizeCard(card).id)\r\n      )\r\n    );\r\n    classifyCards(filteredCards);\r\n  };\r\n\r\n  // Agregar carta clave\r\n  const addKeyCard = (card) => {\r\n    const stdCard = standardizeCard(card);\r\n    if (!keyCards.some((keyCard) => Number(standardizeCard(keyCard).id) === Number(stdCard.id))) {\r\n      setKeyCards([...keyCards, stdCard]);\r\n    }\r\n  };\r\n\r\n  // Agregar carta manualmente\r\n  const addSelectedCard = () => {\r\n    const selectedCard = selectedCards.find(\r\n      (card) => Number(standardizeCard(card).id) === Number(selectedCardId)\r\n    );\r\n    if (!selectedCard) return;\r\n    if (\r\n      [\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some((type) =>\r\n        selectedCard.type.includes(type)\r\n      )\r\n    ) {\r\n      addCardToExtraDeck(selectedCard);\r\n    } else {\r\n      addCardToMainDeck(selectedCard);\r\n    }\r\n  };\r\n\r\n  const addCardToMainDeck = (card) => {\r\n    const stdCard = standardizeCard(card);\r\n    if (mainDeck.length < deckSize) setMainDeck([...mainDeck, stdCard]);\r\n    else alert(`El Main Deck ya tiene ${deckSize} cartas.`);\r\n  };\r\n\r\n  const addCardToExtraDeck = (card) => {\r\n    const stdCard = standardizeCard(card);\r\n    if (extraDeck.length < 15) setExtraDeck([...extraDeck, stdCard]);\r\n    else alert(\"El Deck Extra ya tiene 15 cartas.\");\r\n  };\r\n\r\n  const removeCardFromMainDeck = (card) => {\r\n    const stdCard = standardizeCard(card);\r\n    setMainDeck(mainDeck.filter((c) => Number(c.id) !== Number(stdCard.id)));\r\n  };\r\n\r\n  const removeCardFromExtraDeck = (card) => {\r\n    const stdCard = standardizeCard(card);\r\n    setExtraDeck(extraDeck.filter((c) => Number(c.id) !== Number(stdCard.id)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Main Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={() => classifyCards(selectedCards)}>Armar Deck</button>\r\n      <button onClick={saveDeckToFirestore}>Guardar Deck</button>\r\n      {loadingDecks && <p>Cargando decks guardados...</p>}\r\n\r\n      <h3>Seleccionar Cartas Clave</h3>\r\n      <select onChange={(e) => addKeyCard(selectedCards.find((c) => Number(c.id) === Number(e.target.value)))} defaultValue=\"\">\r\n        <option value=\"\">Selecciona una carta</option>\r\n        {selectedCards.map((card) => (\r\n          <option key={card.id} value={card.id}>{card.name}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={buildAroundKeyCards}>Construir alrededor de cartas clave</button>\r\n\r\n      <h3>Agregar Carta Manualmente</h3>\r\n      <select onChange={(e) => setSelectedCardId(e.target.value)} defaultValue=\"\">\r\n        <option value=\"\">Selecciona una carta</option>\r\n        {selectedCards.map((card) => (\r\n          <option key={card.id} value={card.id}>{card.name}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={addSelectedCard}>Añadir Carta</button>\r\n\r\n      <div>\r\n        <h3>Main Deck ({mainDeck.length}/{deckSize})</h3>\r\n        <ul>\r\n          {mainDeck.map((card, index) => (\r\n            <li key={`${card.id}-${index}`}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <button onClick={() => removeCardFromMainDeck(card)}>Eliminar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Extra Deck ({extraDeck.length}/15)</h3>\r\n        <ul>\r\n          {extraDeck.map((card, index) => (\r\n            <li key={`${card.id}-${index}`}>\r\n              <strong>{card.name}</strong> - {card.type}\r\n              <button onClick={() => removeCardFromExtraDeck(card)}>Eliminar</button>\r\n            </li>\r\n          ))}  \r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}