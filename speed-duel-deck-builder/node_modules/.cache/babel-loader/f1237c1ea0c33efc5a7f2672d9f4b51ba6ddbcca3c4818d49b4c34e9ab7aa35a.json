{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CardSearch(_ref){let{addToDeck}=_ref;const[query,setQuery]=useState(\"\");const[cards,setCards]=useState([]);// Ahora es una lista de cartas\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const fetchCardInfo=async()=>{setLoading(true);setError(\"\");setCards([]);// Limpiamos los resultados previos\ntry{const response=await fetch(`https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${encodeURIComponent(query)}`// Ahora usamos \"fname\" para búsqueda parcial\n);const data=await response.json();if(data.data){setCards(data.data);// Guardamos todas las coincidencias\n}else{setError(\"No se encontraron cartas. Prueba con otro nombre.\");}}catch(err){setError(\"Error al buscar la carta.\");}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Buscador de Cartas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Escribe el nombre de la carta...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchCardInfo,children:\"Buscar\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Buscando cartas...\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),cards.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Resultados encontrados:\"}),/*#__PURE__*/_jsx(\"ul\",{children:cards.map(card=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:\"10px\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:card.name}),/*#__PURE__*/_jsx(\"img\",{src:card.card_images[0].image_url,alt:card.name,width:\"100\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tipo:\"}),\" \",card.type]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Descripci\\xF3n:\"}),\" \",card.desc]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addToDeck(card),children:\"Agregar al mazo\"})]},card.id))})]})]});}export default CardSearch;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","CardSearch","_ref","addToDeck","query","setQuery","cards","setCards","loading","setLoading","error","setError","fetchCardInfo","response","fetch","encodeURIComponent","data","json","err","children","type","value","onChange","e","target","placeholder","onClick","style","color","length","map","card","marginBottom","name","src","card_images","image_url","alt","width","desc","id"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction CardSearch({ addToDeck }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [cards, setCards] = useState([]); // Ahora es una lista de cartas\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchCardInfo = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setCards([]); // Limpiamos los resultados previos\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${encodeURIComponent(query)}` // Ahora usamos \"fname\" para búsqueda parcial\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.data) {\r\n        setCards(data.data); // Guardamos todas las coincidencias\r\n      } else {\r\n        setError(\"No se encontraron cartas. Prueba con otro nombre.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al buscar la carta.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Buscador de Cartas</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Escribe el nombre de la carta...\"\r\n      />\r\n      <button onClick={fetchCardInfo}>Buscar</button>\r\n\r\n      {loading && <p>Buscando cartas...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {cards.length > 0 && (\r\n        <div>\r\n          <h3>Resultados encontrados:</h3>\r\n          <ul>\r\n            {cards.map((card) => (\r\n              <li key={card.id} style={{ marginBottom: \"10px\" }}>\r\n                <h4>{card.name}</h4>\r\n                <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n                <p><strong>Tipo:</strong> {card.type}</p>\r\n                <p><strong>Descripción:</strong> {card.desc}</p>\r\n                <button onClick={() => addToDeck(card)}>Agregar al mazo</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}