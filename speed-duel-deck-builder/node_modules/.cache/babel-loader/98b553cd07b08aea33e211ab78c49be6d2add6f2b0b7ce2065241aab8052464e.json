{"ast":null,"code":"import React,{useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CardList(_ref){let{cards,setCards}=_ref;useEffect(()=>{console.log(\"Cartas seleccionadas:\",cards);},[cards]);// Guardar todo el array de cartas en un archivo JSON\nconst exportToFile=()=>{const data=JSON.stringify(cards,null,2);const blob=new Blob([data],{type:\"application/json\"});const a=document.createElement(\"a\");a.href=URL.createObjectURL(blob);a.download=\"cartas_seleccionadas.json\";a.click();};// Cargar todo el array de cartas desde un archivo JSON\nconst importFromFile=event=>{const file=event.target.files[0];if(!file)return;const reader=new FileReader();reader.onload=e=>{try{// Aquí están todas las cartas con su info completa\nconst importedCards=JSON.parse(e.target.result);setCards(importedCards);}catch(error){console.error(\"Error al importar archivo:\",error);}};reader.readAsText(file);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cartas Seleccionadas\"}),/*#__PURE__*/_jsx(\"button\",{onClick:exportToFile,children:\"Guardar Cartas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:importFromFile}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\"},children:cards.length>0?cards.map((card,index)=>{var _card$card_images,_card$card_images$;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:\"10px\",textAlign:\"center\",transition:\"transform 0.2s ease-in-out\"},onMouseEnter:e=>e.currentTarget.style.transform=\"scale(1.5)\",onMouseLeave:e=>e.currentTarget.style.transform=\"scale(1)\",children:[/*#__PURE__*/_jsx(\"img\",{src:(_card$card_images=card.card_images)===null||_card$card_images===void 0?void 0:(_card$card_images$=_card$card_images[0])===null||_card$card_images$===void 0?void 0:_card$card_images$.image_url,alt:card.name,width:\"100\"}),/*#__PURE__*/_jsx(\"p\",{children:card.name})]},card.instanceId||index);}):/*#__PURE__*/_jsx(\"p\",{children:\"No hay cartas seleccionadas.\"})})]});}export default CardList;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","jsxs","_jsxs","CardList","_ref","cards","setCards","console","log","exportToFile","data","JSON","stringify","blob","Blob","type","a","document","createElement","href","URL","createObjectURL","download","click","importFromFile","event","file","target","files","reader","FileReader","onload","e","importedCards","parse","result","error","readAsText","children","onClick","accept","onChange","style","display","flexWrap","length","map","card","index","_card$card_images","_card$card_images$","margin","textAlign","transition","onMouseEnter","currentTarget","transform","onMouseLeave","src","card_images","image_url","alt","name","width","instanceId"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction CardList({ cards, setCards }) {\r\n  useEffect(() => {\r\n    console.log(\"Cartas seleccionadas:\", cards);\r\n  }, [cards]);\r\n\r\n  // Guardar todo el array de cartas en un archivo JSON\r\n  const exportToFile = () => {\r\n    const data = JSON.stringify(cards, null, 2); \r\n    const blob = new Blob([data], { type: \"application/json\" });\r\n    const a = document.createElement(\"a\");\r\n    a.href = URL.createObjectURL(blob);\r\n    a.download = \"cartas_seleccionadas.json\";\r\n    a.click();\r\n  };\r\n\r\n  // Cargar todo el array de cartas desde un archivo JSON\r\n  const importFromFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        // Aquí están todas las cartas con su info completa\r\n        const importedCards = JSON.parse(e.target.result);\r\n        setCards(importedCards); \r\n      } catch (error) {\r\n        console.error(\"Error al importar archivo:\", error);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n      <button onClick={exportToFile}>Guardar Cartas</button>\r\n      <input type=\"file\" accept=\".json\" onChange={importFromFile} />\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.length > 0 ? (\r\n          cards.map((card, index) => (\r\n            <div\r\n              key={card.instanceId || index}\r\n              style={{\r\n                margin: \"10px\",\r\n                textAlign: \"center\",\r\n                transition: \"transform 0.2s ease-in-out\",\r\n              }}\r\n              onMouseEnter={(e) => (e.currentTarget.style.transform = \"scale(1.5)\")}\r\n              onMouseLeave={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\r\n            >\r\n              <img\r\n                src={card.card_images?.[0]?.image_url}\r\n                alt={card.name}\r\n                width=\"100\"\r\n              />\r\n              <p>{card.name}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay cartas seleccionadas.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}