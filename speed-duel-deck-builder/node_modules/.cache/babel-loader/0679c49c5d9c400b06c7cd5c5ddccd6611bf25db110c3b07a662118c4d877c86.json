{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CardUploader from './CardUploader';\nimport CardList from './CardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder() {\n  _s();\n  const [cards, setCards] = useState([]);\n\n  // Función que recibe las cartas del componente CardUploader\n  const handleCardUpload = uploadedCards => {\n    setCards(uploadedCards); // Actualiza las cartas cargadas en el estado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardUploader, {\n      onUpload: handleCardUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","CardUploader","CardList","jsxDEV","_jsxDEV","DeckBuilder","_s","cards","setCards","handleCardUpload","uploadedCards","children","onUpload","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CardUploader from './CardUploader';\r\nimport CardList from './CardList';\r\n\r\nfunction DeckBuilder() {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  // Función que recibe las cartas del componente CardUploader\r\n  const handleCardUpload = (uploadedCards) => {\r\n    setCards(uploadedCards); // Actualiza las cartas cargadas en el estado\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardUploader onUpload={handleCardUpload} />\r\n      {cards.length > 0 && <CardList cards={cards} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,gBAAgB,GAAIC,aAAa,IAAK;IAC1CF,QAAQ,CAACE,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACH,YAAY;MAACW,QAAQ,EAAEH;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3CT,KAAK,CAACU,MAAM,GAAG,CAAC,iBAAIb,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACV,EAAA,CAdQD,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAgBpB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}