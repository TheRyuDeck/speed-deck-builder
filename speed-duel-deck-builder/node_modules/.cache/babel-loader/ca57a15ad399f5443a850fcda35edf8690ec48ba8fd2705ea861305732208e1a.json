{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards,\n  setCards\n}) {\n  _s();\n  const [savedCards, setSavedCards] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      if (user) {\n        console.log(\"Usuario autenticado:\", user.uid);\n        loadUserDeck(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const loadUserDeck = async userId => {\n    setLoading(true);\n    const decksRef = collection(db, \"decks\");\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\n    try {\n      const querySnapshot = await getDocs(q);\n      if (!querySnapshot.empty) {\n        const deckData = querySnapshot.docs[0].data();\n        console.log(\"Datos brutos de Firestore:\", deckData);\n        const loadedCards = [...deckData.mainDeck, ...deckData.extraDeck].map(card => ({\n          name: card.name || \"Carta Desconocida\",\n          type: card.type || \"Desconocido\",\n          card_images: card.card_images || [{\n            image_url: \"https://via.placeholder.com/100\"\n          }]\n        }));\n        console.log(\"Cartas después de formatear:\", loadedCards);\n        setSavedCards(loadedCards);\n      }\n    } catch (error) {\n      console.error(\"Error al cargar el deck:\", error);\n    }\n    setLoading(false);\n  };\n  const handleSelectCard = card => {\n    if (setCards) {\n      setCards(prevCards => [...prevCards, card]);\n    } else {\n      console.error(\"setCards no está disponible en CardList.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cartas Seleccionadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando cartas guardadas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\",\n          cursor: \"pointer\"\n        },\n        onClick: () => handleSelectCard(card),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), savedCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\",\n          cursor: \"pointer\"\n        },\n        onClick: () => handleSelectCard(card),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, `saved-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"HISm1ZTNRZy8M53fL4B4NGbUeSA=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","useEffect","db","auth","collection","getDocs","query","where","jsxDEV","_jsxDEV","CardList","cards","setCards","_s","savedCards","setSavedCards","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","console","log","uid","loadUserDeck","userId","decksRef","q","querySnapshot","empty","deckData","docs","data","loadedCards","mainDeck","extraDeck","map","card","name","type","card_images","image_url","error","handleSelectCard","prevCards","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","index","margin","textAlign","cursor","onClick","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\n\r\nfunction CardList({ cards, setCards }) {\r\n  const [savedCards, setSavedCards] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      if (user) {\r\n        console.log(\"Usuario autenticado:\", user.uid);\r\n        loadUserDeck(user.uid);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const loadUserDeck = async (userId) => {\r\n    setLoading(true);\r\n    const decksRef = collection(db, \"decks\");\r\n    const q = query(decksRef, where(\"userId\", \"==\", userId));\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      if (!querySnapshot.empty) {\r\n        const deckData = querySnapshot.docs[0].data();\r\n        console.log(\"Datos brutos de Firestore:\", deckData);\r\n\r\n        const loadedCards = [...deckData.mainDeck, ...deckData.extraDeck].map((card) => ({\r\n          name: card.name || \"Carta Desconocida\",\r\n          type: card.type || \"Desconocido\",\r\n          card_images: card.card_images || [{ image_url: \"https://via.placeholder.com/100\" }],\r\n        }));\r\n\r\n        console.log(\"Cartas después de formatear:\", loadedCards);\r\n        setSavedCards(loadedCards);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al cargar el deck:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSelectCard = (card) => {\r\n    if (setCards) {\r\n      setCards((prevCards) => [...prevCards, card]);\r\n    } else {\r\n      console.error(\"setCards no está disponible en CardList.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n\r\n      {loading ? <p>Cargando cartas guardadas...</p> : null}\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.map((card, index) => (\r\n          <div key={index} style={{ margin: \"10px\", textAlign: \"center\", cursor: \"pointer\" }}\r\n               onClick={() => handleSelectCard(card)}>\r\n            <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n\r\n        {savedCards.map((card, index) => (\r\n          <div key={`saved-${index}`} style={{ margin: \"10px\", textAlign: \"center\", cursor: \"pointer\" }}\r\n               onClick={() => handleSelectCard(card)}>\r\n            <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}