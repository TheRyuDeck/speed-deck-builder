{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards,\n  allCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [finalDeck, setFinalDeck] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCardToAdd, setSelectedCardToAdd] = useState(null);\n  const buildDeck = () => {\n    if (selectedCards.length < deckSize) {\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\n      return;\n    }\n\n    // Agrupar cartas por tipo\n    const cardGroups = selectedCards.reduce((acc, card) => {\n      acc[card.type] = acc[card.type] || [];\n      acc[card.type].push(card);\n      return acc;\n    }, {});\n\n    // Seleccionar cartas priorizando sinergia\n    const sortedCards = Object.values(cardGroups).flat().sort((a, b) => b.atk - a.atk); // Ejemplo de prioridad: ATK alto\n\n    // Seleccionar las primeras cartas según el tamaño del deck\n    setFinalDeck(sortedCards.slice(0, deckSize));\n  };\n  const addCardToDeck = () => {\n    if (selectedCardToAdd) {\n      setFinalDeck([...finalDeck, selectedCardToAdd]);\n      setSelectedCardToAdd(null); // Limpiar la carta seleccionada después de agregarla\n    }\n  };\n  const removeCard = index => {\n    setFinalDeck(finalDeck.filter((_, i) => i !== index));\n  };\n  const moveCard = (index, direction) => {\n    const newDeck = [...finalDeck];\n    const targetIndex = index + direction;\n    if (targetIndex >= 0 && targetIndex < newDeck.length) {\n      [newDeck[index], newDeck[targetIndex]] = [newDeck[targetIndex], newDeck[index]];\n      setFinalDeck(newDeck);\n    }\n  };\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n    const filteredCards = allCards.filter(card => card.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    setSelectedCardToAdd(filteredCards[0]); // Establece la primera carta filtrada como seleccionada\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tama\\xF1o del Deck:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"20\",\n        max: \"30\",\n        value: deckSize,\n        onChange: e => setDeckSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildDeck,\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A\\xF1adir carta individual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar carta por nombre\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), selectedCardToAdd && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Seleccionada: \", selectedCardToAdd.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardToDeck,\n          children: \"A\\xF1adir al Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), finalDeck.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deck Generado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: finalDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), \" - \", card.type, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_images[0].image_url,\n            alt: card.name,\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCard(index),\n            children: \"\\u274C Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveCard(index, -1),\n            children: \"\\u2B06\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveCard(index, 1),\n            children: \"\\u2B07\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"uTUYqUu6lugRJGHPVMe+qpxL/Ws=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","allCards","_s","deckSize","setDeckSize","finalDeck","setFinalDeck","searchQuery","setSearchQuery","selectedCardToAdd","setSelectedCardToAdd","buildDeck","length","alert","cardGroups","reduce","acc","card","type","push","sortedCards","Object","values","flat","sort","a","b","atk","slice","addCardToDeck","removeCard","index","filter","_","i","moveCard","direction","newDeck","targetIndex","handleSearch","event","target","value","filteredCards","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","onChange","e","Number","onClick","placeholder","map","src","card_images","image_url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction DeckBuilder({ selectedCards, allCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [finalDeck, setFinalDeck] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedCardToAdd, setSelectedCardToAdd] = useState(null);\r\n\r\n  const buildDeck = () => {\r\n    if (selectedCards.length < deckSize) {\r\n      alert(\"No tienes suficientes cartas seleccionadas para armar el deck.\");\r\n      return;\r\n    }\r\n\r\n    // Agrupar cartas por tipo\r\n    const cardGroups = selectedCards.reduce((acc, card) => {\r\n      acc[card.type] = acc[card.type] || [];\r\n      acc[card.type].push(card);\r\n      return acc;\r\n    }, {});\r\n\r\n    // Seleccionar cartas priorizando sinergia\r\n    const sortedCards = Object.values(cardGroups)\r\n      .flat()\r\n      .sort((a, b) => b.atk - a.atk); // Ejemplo de prioridad: ATK alto\r\n\r\n    // Seleccionar las primeras cartas según el tamaño del deck\r\n    setFinalDeck(sortedCards.slice(0, deckSize));\r\n  };\r\n\r\n  const addCardToDeck = () => {\r\n    if (selectedCardToAdd) {\r\n      setFinalDeck([...finalDeck, selectedCardToAdd]);\r\n      setSelectedCardToAdd(null); // Limpiar la carta seleccionada después de agregarla\r\n    }\r\n  };\r\n\r\n  const removeCard = (index) => {\r\n    setFinalDeck(finalDeck.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const moveCard = (index, direction) => {\r\n    const newDeck = [...finalDeck];\r\n    const targetIndex = index + direction;\r\n\r\n    if (targetIndex >= 0 && targetIndex < newDeck.length) {\r\n      [newDeck[index], newDeck[targetIndex]] = [newDeck[targetIndex], newDeck[index]];\r\n      setFinalDeck(newDeck);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchQuery(event.target.value);\r\n    const filteredCards = allCards.filter((card) =>\r\n      card.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setSelectedCardToAdd(filteredCards[0]); // Establece la primera carta filtrada como seleccionada\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Automático</h2>\r\n      <label>\r\n        Tamaño del Deck:\r\n        <input\r\n          type=\"number\"\r\n          min=\"20\"\r\n          max=\"30\"\r\n          value={deckSize}\r\n          onChange={(e) => setDeckSize(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={buildDeck}>Armar Deck</button>\r\n\r\n      <div>\r\n        <h3>Añadir carta individual</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar carta por nombre\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n        {selectedCardToAdd && (\r\n          <div>\r\n            <p>Seleccionada: {selectedCardToAdd.name}</p>\r\n            <button onClick={addCardToDeck}>Añadir al Deck</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {finalDeck.length > 0 && (\r\n        <div>\r\n          <h3>Deck Generado</h3>\r\n          <ul>\r\n            {finalDeck.map((card, index) => (\r\n              <li key={index}>\r\n                <strong>{card.name}</strong> - {card.type}\r\n                <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n                <button onClick={() => removeCard(index)}>❌ Eliminar</button>\r\n                <button onClick={() => moveCard(index, -1)}>⬆️</button>\r\n                <button onClick={() => moveCard(index, 1)}>⬇️</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}