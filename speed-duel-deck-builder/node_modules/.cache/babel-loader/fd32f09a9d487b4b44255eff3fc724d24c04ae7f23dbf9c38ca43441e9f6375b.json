{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\DeckBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckBuilder({\n  selectedCards\n}) {\n  _s();\n  const [deckSize, setDeckSize] = useState(20);\n  const [mainDeck, setMainDeck] = useState([]);\n  const [extraDeck, setExtraDeck] = useState([]);\n\n  // Cargar decks desde localStorage al iniciar\n  useEffect(() => {\n    const savedMainDeck = JSON.parse(localStorage.getItem(\"mainDeck\"));\n    const savedExtraDeck = JSON.parse(localStorage.getItem(\"extraDeck\"));\n    if (savedMainDeck) setMainDeck(savedMainDeck);\n    if (savedExtraDeck) setExtraDeck(savedExtraDeck);\n  }, []);\n\n  // Guardar decks en localStorage cada vez que cambien\n  useEffect(() => {\n    localStorage.setItem(\"mainDeck\", JSON.stringify(mainDeck));\n    localStorage.setItem(\"extraDeck\", JSON.stringify(extraDeck));\n  }, [mainDeck, extraDeck]);\n  const classifyCards = cards => {\n    let newMainDeck = [...mainDeck];\n    let newExtraDeck = [...extraDeck];\n    cards.forEach(card => {\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => card.type.includes(type))) {\n        if (newExtraDeck.length < 15) newExtraDeck.push(card);\n      } else {\n        if (newMainDeck.length < deckSize) newMainDeck.push(card);\n      }\n    });\n    setMainDeck(newMainDeck);\n    setExtraDeck(newExtraDeck);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deck Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => classifyCards(selectedCards),\n      children: \"Armar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Main Deck (\", mainDeck.length, \"/\", deckSize, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mainDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [card.name, \" - \", card.type]\n      }, `${card.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Extra Deck (\", extraDeck.length, \"/15)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: extraDeck.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [card.name, \" - \", card.type]\n      }, `${card.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(DeckBuilder, \"xcrLFj8+ZvFL3SiQqQEpxtYTcyM=\");\n_c = DeckBuilder;\nexport default DeckBuilder;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DeckBuilder","selectedCards","_s","deckSize","setDeckSize","mainDeck","setMainDeck","extraDeck","setExtraDeck","savedMainDeck","JSON","parse","localStorage","getItem","savedExtraDeck","setItem","stringify","classifyCards","cards","newMainDeck","newExtraDeck","forEach","card","some","type","includes","length","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","name","id","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/DeckBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DeckBuilder({ selectedCards }) {\r\n  const [deckSize, setDeckSize] = useState(20);\r\n  const [mainDeck, setMainDeck] = useState([]);\r\n  const [extraDeck, setExtraDeck] = useState([]);\r\n\r\n  // Cargar decks desde localStorage al iniciar\r\n  useEffect(() => {\r\n    const savedMainDeck = JSON.parse(localStorage.getItem(\"mainDeck\"));\r\n    const savedExtraDeck = JSON.parse(localStorage.getItem(\"extraDeck\"));\r\n\r\n    if (savedMainDeck) setMainDeck(savedMainDeck);\r\n    if (savedExtraDeck) setExtraDeck(savedExtraDeck);\r\n  }, []);\r\n\r\n  // Guardar decks en localStorage cada vez que cambien\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mainDeck\", JSON.stringify(mainDeck));\r\n    localStorage.setItem(\"extraDeck\", JSON.stringify(extraDeck));\r\n  }, [mainDeck, extraDeck]);\r\n\r\n  const classifyCards = (cards) => {\r\n    let newMainDeck = [...mainDeck];\r\n    let newExtraDeck = [...extraDeck];\r\n    cards.forEach((card) => {\r\n      if ([\"Fusion\", \"Synchro\", \"XYZ\", \"Link\"].some(type => card.type.includes(type))) {\r\n        if (newExtraDeck.length < 15) newExtraDeck.push(card);\r\n      } else {\r\n        if (newMainDeck.length < deckSize) newMainDeck.push(card);\r\n      }\r\n    });\r\n    setMainDeck(newMainDeck);\r\n    setExtraDeck(newExtraDeck);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deck Autom√°tico</h2>\r\n      <button onClick={() => classifyCards(selectedCards)}>Armar Deck</button>\r\n      <h3>Main Deck ({mainDeck.length}/{deckSize})</h3>\r\n      <ul>\r\n        {mainDeck.map((card, index) => (\r\n          <li key={`${card.id}-${index}`}>\r\n            {card.name} - {card.type}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>Extra Deck ({extraDeck.length}/15)</h3>\r\n      <ul>\r\n        {extraDeck.map((card, index) => (\r\n          <li key={`${card.id}-${index}`}>\r\n            {card.name} - {card.type}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}