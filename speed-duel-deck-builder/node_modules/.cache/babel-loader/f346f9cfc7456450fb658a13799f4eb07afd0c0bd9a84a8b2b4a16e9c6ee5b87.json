{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards,\n  setCards\n}) {\n  _s();\n  useEffect(() => {\n    console.log(\"Cartas seleccionadas:\", cards);\n  }, [cards]);\n  const handleSelectCard = card => {\n    // Creamos una nueva copia con un identificador único (instanceId)\n    const newCard = {\n      ...card,\n      instanceId: crypto.randomUUID()\n    };\n\n    // Agregamos la nueva carta al estado sin afectar otras copias\n    setCards(prevCards => [...prevCards, newCard]);\n    console.log(\"Carta agregada:\", newCard);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cartas Seleccionadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: cards.length > 0 ? cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, card.instanceId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay cartas seleccionadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CardList","cards","setCards","_s","console","log","handleSelectCard","card","newCard","instanceId","crypto","randomUUID","prevCards","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","length","map","margin","textAlign","src","card_images","image_url","alt","name","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction CardList({ cards, setCards }) {\r\n  useEffect(() => {\r\n    console.log(\"Cartas seleccionadas:\", cards);\r\n  }, [cards]);\r\n\r\n  const handleSelectCard = (card) => {\r\n    // Creamos una nueva copia con un identificador único (instanceId)\r\n    const newCard = { ...card, instanceId: crypto.randomUUID() };\r\n    \r\n    // Agregamos la nueva carta al estado sin afectar otras copias\r\n    setCards((prevCards) => [...prevCards, newCard]);\r\n    \r\n    console.log(\"Carta agregada:\", newCard);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.length > 0 ? (\r\n          cards.map((card) => (\r\n            <div\r\n              key={card.instanceId} \r\n              style={{ margin: \"10px\", textAlign: \"center\" }}\r\n            >\r\n              <img\r\n                src={card.card_images[0].image_url}\r\n                alt={card.name}\r\n                width=\"100\"\r\n              />\r\n              <p>{card.name}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay cartas seleccionadas.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrCN,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,KAAK,CAAC;EAC7C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA,MAAMC,OAAO,GAAG;MAAE,GAAGD,IAAI;MAAEE,UAAU,EAAEC,MAAM,CAACC,UAAU,CAAC;IAAE,CAAC;;IAE5D;IACAT,QAAQ,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEJ,OAAO,CAAC,CAAC;IAEhDJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,OAAO,CAAC;EACzC,CAAC;EAED,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlB,OAAA;MAAKmB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAP,QAAA,EAC/CZ,KAAK,CAACoB,MAAM,GAAG,CAAC,GACfpB,KAAK,CAACqB,GAAG,CAAEf,IAAI,iBACbR,OAAA;QAEEmB,KAAK,EAAE;UAAEK,MAAM,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAX,QAAA,gBAE/Cd,OAAA;UACE0B,GAAG,EAAElB,IAAI,CAACmB,WAAW,CAAC,CAAC,CAAC,CAACC,SAAU;UACnCC,GAAG,EAAErB,IAAI,CAACsB,IAAK;UACfC,KAAK,EAAC;QAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACFlB,OAAA;UAAAc,QAAA,EAAIN,IAAI,CAACsB;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GARbV,IAAI,CAACE,UAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASjB,CACN,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACnC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAvCQH,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}