{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\Desktop\\\\yu-gi-oh\\\\speed-duel-deck-builder\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebaseConfig\"; // Importa Firestore y Auth\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  cards\n}) {\n  _s();\n  const [savedCards, setSavedCards] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Verificar si el usuario estÃ¡ autenticado\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      if (user) {\n        loadUserDeck(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // ðŸ”¹ Recuperar las cartas guardadas del usuario en Firestore\n  const loadUserDeck = async userId => {\n    setLoading(true);\n    const decksRef = collection(db, \"users\", userId, \"decks\"); // âœ… Consulta dentro del usuario autenticado\n\n    try {\n      const querySnapshot = await getDocs(decksRef);\n      if (!querySnapshot.empty) {\n        const latestDeck = querySnapshot.docs[0].data(); // Obtiene el Ãºltimo deck guardado\n        setSavedCards(latestDeck.cards || []); // âœ… Asegura que \"cards\" contiene la lista de cartas\n        console.log(\"Deck cargado:\", latestDeck.cards);\n      } else {\n        console.log(\"No hay decks guardados para este usuario.\");\n        setSavedCards([]); // Evita mostrar cartas antiguas si el usuario no tiene decks\n      }\n    } catch (error) {\n      console.error(\"Error al cargar el deck:\", error);\n    }\n    setLoading(false);\n  };\n\n  // ðŸ”¹ Guardar el deck actual en Firestore\n  const saveDeck = async deckName => {\n    if (!user) {\n      console.error(\"Usuario no autenticado.\");\n      return;\n    }\n    try {\n      const deckRef = doc(db, \"users\", user.uid, \"decks\", deckName);\n      await setDoc(deckRef, {\n        name: deckName,\n        cards: cards,\n        // âœ… Guarda las cartas seleccionadas actualmente\n        timestamp: new Date()\n      });\n      console.log(\"Deck guardado correctamente!\");\n    } catch (error) {\n      console.error(\"Error al guardar el deck:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cartas Seleccionadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando cartas guardadas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveDeck(\"MiDeck\"),\n      children: \"Guardar Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), savedCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_images[0].image_url,\n          alt: card.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, `saved-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"HISm1ZTNRZy8M53fL4B4NGbUeSA=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","useEffect","db","auth","collection","getDocs","doc","setDoc","jsxDEV","_jsxDEV","CardList","cards","_s","savedCards","setSavedCards","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","loadUserDeck","uid","userId","decksRef","querySnapshot","empty","latestDeck","docs","data","console","log","error","saveDeck","deckName","deckRef","name","timestamp","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","flexWrap","map","card","index","margin","textAlign","src","card_images","image_url","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/migue/Desktop/yu-gi-oh/speed-duel-deck-builder/src/components/CardList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\"; // Importa Firestore y Auth\r\nimport { collection, getDocs, doc, setDoc } from \"firebase/firestore\";\r\n\r\nfunction CardList({ cards }) {\r\n  const [savedCards, setSavedCards] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar si el usuario estÃ¡ autenticado\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      if (user) {\r\n        loadUserDeck(user.uid);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ðŸ”¹ Recuperar las cartas guardadas del usuario en Firestore\r\n  const loadUserDeck = async (userId) => {\r\n    setLoading(true);\r\n    const decksRef = collection(db, \"users\", userId, \"decks\"); // âœ… Consulta dentro del usuario autenticado\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(decksRef);\r\n      if (!querySnapshot.empty) {\r\n        const latestDeck = querySnapshot.docs[0].data(); // Obtiene el Ãºltimo deck guardado\r\n        setSavedCards(latestDeck.cards || []); // âœ… Asegura que \"cards\" contiene la lista de cartas\r\n        console.log(\"Deck cargado:\", latestDeck.cards);\r\n      } else {\r\n        console.log(\"No hay decks guardados para este usuario.\");\r\n        setSavedCards([]); // Evita mostrar cartas antiguas si el usuario no tiene decks\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al cargar el deck:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // ðŸ”¹ Guardar el deck actual en Firestore\r\n  const saveDeck = async (deckName) => {\r\n    if (!user) {\r\n      console.error(\"Usuario no autenticado.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const deckRef = doc(db, \"users\", user.uid, \"decks\", deckName);\r\n      await setDoc(deckRef, {\r\n        name: deckName,\r\n        cards: cards, // âœ… Guarda las cartas seleccionadas actualmente\r\n        timestamp: new Date(),\r\n      });\r\n      console.log(\"Deck guardado correctamente!\");\r\n    } catch (error) {\r\n      console.error(\"Error al guardar el deck:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cartas Seleccionadas</h2>\r\n\r\n      {loading ? <p>Cargando cartas guardadas...</p> : null}\r\n\r\n      <button onClick={() => saveDeck(\"MiDeck\")}>Guardar Deck</button>\r\n\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {/* Mostrar cartas seleccionadas en la sesiÃ³n actual */}\r\n        {cards.map((card, index) => (\r\n          <div key={index} style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n            <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Mostrar cartas recuperadas de Firestore */}\r\n        {savedCards.map((card, index) => (\r\n          <div key={`saved-${index}`} style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n            <img src={card.card_images[0].image_url} alt={card.name} width=\"100\" />\r\n            <p>{card.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}